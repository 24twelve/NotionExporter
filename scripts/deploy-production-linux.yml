---
- name: Publish, deploy and start service
  hosts: production
  vars: 
    playbook_dir: /.
    production_folder: /opt/NotionExporter
    deployment_folder: "{{ production_folder }}/deploy"
    current_deployment_folder: "{{ production_folder }}/current"
    publish_path: "{{ playbook_dir }}/deploy"
    secrets_path: "{{ publish_path }}/secrets"
    systemd_config_path: /etc/systemd/system/
    service_file: "{{ secrets_path }}/notion-exporter.service"
  vars_files:
    - "{{ secrets_path }}/deploy-config.json"
  tasks:
    - name: Retrieve current git commit
      shell: 
        cmd: "git rev-parse HEAD"
      register: git_version
      delegate_to: localhost
    - name: Register deployment path
      set_fact: deployment_path="{{ deployment_folder }}/{{ git_version.stdout }}"
    - name: Install the latest version of rsync on remote host
      yum:
        name: rsync
        state: latest
      become: true
    - name: Copy deployment to target from {{ publish_path }} to {{ deployment_path }}
      synchronize:
        src: "{{ publish_path }}/"
        dest: "{{ deployment_path }}/"
        delete: yes
    - name: Copy systemd file to manage the service
      copy:
        src: "{{ service_file }}"
        dest: "{{ systemd_config_path }}"
        owner: root
        group: root
        mode: '0644'
        force: yes
      become: true
    - name: Switch symlink to current deployment
      file: 
        src: "{{ deployment_path }}"
        dest: "{{ current_deployment_folder }}"
        state: link
    - name: Restart service
      systemd:
        state: restarted
        daemon_reload: yes
        name: notion-exporter.service
      become: true
    - name: Ensure service is running
      service: 
        name: notion-exporter
        state: started
    - name: GET {{ get_version_endpoint }}
      uri:
        url: "{{ get_version_endpoint }}"
        return_content: yes
      register: content
    - name: Fail if GET version is not current ({{ git_version.stdout }})
      fail:
        msg: "Answer for vesrion request does not contain expected commit hash: {{ content.content }}"
      when:  'git_version.stdout not in content.content'